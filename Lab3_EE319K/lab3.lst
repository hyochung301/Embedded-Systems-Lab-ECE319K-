


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** Lab3.s ***************
    2 00000000         ; Program written by: Put your names here
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/10/2022
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: Two buttons and one LE
                       D)
    8 00000000         ;  Change is Button input  (1 means pressed, 0 means not
                        pressed)
    9 00000000         ;  Breathe is Button input  (1 means pressed, 0 means no
                       t pressed)
   10 00000000         ;  LED is an output (1 activates external LED)
   11 00000000         ; Overall functionality of this system is to operate lik
                       e this
   12 00000000         ;   1) Make LED an output and make Change and Breathe in
                       puts.
   13 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   14 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   15 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   16 00000000         ;   3) When the Change button is pressed-and-released in
                       crease
   17 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   18 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   19 00000000         ;      to 90% to 10% to 30% so on
   20 00000000         ;   4) Implement a "breathing LED" when Breathe Switch i
                       s pressed:
   21 00000000         ; PortE device registers
   22 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   23 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   24 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   25 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   26 00000000         
   27 00000000                 IMPORT           TExaS_Init
   28 00000000                 THUMB
   29 00000000                 AREA             DATA, ALIGN=2
   30 00000000         ;global variables go here
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000                 THUMB
   34 00000000                 EXPORT           EID1
   35 00000000 68 63 32 
              37 34 32 
              36 00    EID1    DCB              "hc27426",0 ;replace ABC123 wit
                                                            h your EID



ARM Macro Assembler    Page 2 


   36 00000008                 EXPORT           EID2
   37 00000008 67 61 77 
              32 33 32 
              32 00    EID2    DCB              "gaw2322",0 ;replace ABC123 wit
                                                            h your EID
   38 00000010                 ALIGN            4
   39 00000010         
   40 00000010                 EXPORT           Start
   41 00000010         
   42 00000010         Start
   43 00000010         ; TExaS_Init sets bus clock at 80 MHz, interrupts, ADC1,
                        TIMER3, TIMER5, and UART0
   44 00000010 F04F 0002       MOV              R0,#2       ;0 for TExaS oscill
                                                            oscope, 1 for PORTE
                                                             logic analyzer, 2 
                                                            for Lab3 grader, 3 
                                                            for none
   45 00000014 F7FF FFFE       BL               TExaS_Init  ;enables interrupts
                                                            , prints the pin se
                                                            lections based on E
                                                            ID1 EID2
   46 00000018         ;Initializations
   47 00000018         ;clock
   48 00000018 483E            LDR              R0, = SYSCTL_RCGCGPIO_R
   49 0000001A 7801            LDRB             R1, [R0]
   50 0000001C F041 0110       ORR              R1, #0x10   ; enable Port E clo
                                                            ck
   51 00000020 7001            STRB             R1, [R0]
   52 00000022 BF00            NOP
   53 00000024 BF00            NOP
   54 00000026         ;Define direction(in and out) input 0(change) input 3(br
                       eathe) output  4(Led)
   55 00000026 483C            LDR              R0, =GPIO_PORTE_DIR_R
   56 00000028 6801            LDR              R1, [R0]
   57 0000002A F021 0109       BIC              R1, #0x09   ; clear input pins
   58 0000002E F041 0110       ORR              R1, #0x10   ; set output bits t
                                                            o 1
   59 00000032 6001            STR              R1, [R0]    ;
   60 00000034         ;DIGITAL ENABLE FOR TURNING ON 
   61 00000034 4839            LDR              R0, =GPIO_PORTE_DEN_R ;READ
   62 00000036 7801            LDRB             R1, [R0]
   63 00000038 F041 0119       ORR              R1, #0x19   ;MODIFY TURN ON PE 
                                                            0, 3, 4
   64 0000003C 7001            STRB             R1, [R0]    ; WRITE
   65 0000003E F44F 7896       MOV              R8, #300    ;initial BRTH on va
                                                            lue
   66 00000042 F44F 792F       MOV              R9, #700    ; initial BRTH off 
                                                            value
   67 00000046 F44F 7A96       MOV              R10, #300   ;intial R10 value
   68 0000004A F44F 7B2F       MOV              R11, #700   ;initial R11 value
   69 0000004E         
   70 0000004E         
   71 0000004E         
   72 0000004E         
   73 0000004E         
   74 0000004E         
   75 0000004E         
   76 0000004E         loop
   77 0000004E         ; main engine goes here



ARM Macro Assembler    Page 3 


   78 0000004E         ;R10 on delay R11 delay 
   79 0000004E         ;Toggle LED pin
   80 0000004E         
   81 0000004E         
   82 0000004E         
   83 0000004E         ;Regular on and off
   84 0000004E 4834    RUN     LDR              R0, = GPIO_PORTE_DATA_R
   85 00000050 6801            LDR              R1, [R0]
   86 00000052 F041 0110       ORR              R1, #0x10
   87 00000056 6001            STR              R1, [R0]
   88 00000058         ;Delay cycle# counts
   89 00000058 4653            MOV              R3, R10     ; counter1 n, n*.5 
                                                            wait
   90 0000005A F000 F80B       BL               DELAY
   91 0000005E         
   92 0000005E         
   93 0000005E F021 0110       BIC              R1, #0x10
   94 00000062 482F            LDR              R0, = GPIO_PORTE_DATA_R ; get D
                                                            ata address again
   95 00000064 6001            STR              R1, [R0]
   96 00000066 465B            MOV              R3, R11     ; counter2 
   97 00000068 F000 F804       BL               DELAY
   98 0000006C F006 0600       AND              R6, R6, #0
   99 00000070         
  100 00000070 E031            B                CHK
  101 00000072         
  102 00000072         
  103 00000072 E7EC            B                loop
  104 00000074         
  105 00000074         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  106 00000074         DELAY
  107 00000074 F642 60E0       MOV              R0, #12000
  108 00000078         
  109 00000078         WAIT                                 ;subtract constantl
                                                            y to get a wait of 
                                                            .5 ms
  110 00000078 1E40            SUBS             R0, R0, #0x01
  111 0000007A D1FD            BNE              WAIT
  112 0000007C         
  113 0000007C 1E5B            SUBS             R3, R3, #1
  114 0000007E D1F9            BNE              DELAY
  115 00000080 4770            BX               LR
  116 00000082         
  117 00000082         ;;;;;;
  118 00000082         DELAY1
  119 00000082 F04F 00F0       MOV              R0, #240
  120 00000086         
  121 00000086         WAIT1                                ;subtract constantl
                                                            y to get a wait of 
                                                            .5 ms
  122 00000086 1E40            SUBS             R0, R0, #0x01
  123 00000088 D1FD            BNE              WAIT1
  124 0000008A         
  125 0000008A 1E5B            SUBS             R3, R3, #1
  126 0000008C D1F9            BNE              DELAY1
  127 0000008E 4770            BX               LR
  128 00000090         ;;;;;;;;;;;;;;;
  129 00000090         OVER                                 ;if R10 is above 90
                                                            0, swtich R10 100, 



ARM Macro Assembler    Page 4 


                                                            R11 900
  130 00000090 F04F 0A64       MOV              R10, #100
  131 00000094 F44F 7B61       MOV              R11, #900
  132 00000098         
  133 00000098 E7D9            B                RUN
  134 0000009A         ;;;;;;;;;;;;;;;
  135 0000009A         BRTH
  136 0000009A         ;chk 900
  137 0000009A F5B8 7461       SUBS             R4, R8, #900
  138 0000009E D500            BPL              ABV
  139 000000A0 D404            BMI              BLW
  140 000000A2         
  141 000000A2 F04F 0864 
                       ABV     MOV              R8, #100
  142 000000A6 F44F 7961       MOV              R9, #900
  143 000000AA E004            B                B2
  144 000000AC         
  145 000000AC F108 0805 
                       BLW     ADD              R8, R8, #5
  146 000000B0 F1B9 0905       SUBS             R9, R9, #5
  147 000000B4 E7FF            B                B2
  148 000000B6         
  149 000000B6         ;delay using R8
  150 000000B6         
  151 000000B6 481A    B2      LDR              R0, = GPIO_PORTE_DATA_R
  152 000000B8 6801            LDR              R1, [R0]
  153 000000BA F041 0110       ORR              R1, #0x10
  154 000000BE 6001            STR              R1, [R0]
  155 000000C0         ;Delay cycle# counts
  156 000000C0 4643            MOV              R3, R8      ; counter1 n, n*.5 
                                                            wait
  157 000000C2 F7FF FFDE       BL               DELAY1
  158 000000C6         
  159 000000C6         
  160 000000C6 F021 0110       BIC              R1, #0x10
  161 000000CA 4815            LDR              R0, = GPIO_PORTE_DATA_R ; get D
                                                            ata address again
  162 000000CC 6001            STR              R1, [R0]
  163 000000CE 464B            MOV              R3, R9      ; counter2 
  164 000000D0 F7FF FFD7       BL               DELAY1
  165 000000D4         ;delay using R9
  166 000000D4 E7FF            B                CHK
  167 000000D6         
  168 000000D6         ;;;;;;;;;;;;;;;
  169 000000D6 4812    CHK     LDR              R0, =GPIO_PORTE_DATA_R
  170 000000D8 7801            LDRB             R1, [R0]    ; load bits 7:0
  171 000000DA F001 0108       AND              R1, R1,  #0x08 ; isolate PE3
  172 000000DE EA4F 01D1       LSR              R1, R1, #0x03 ; shift to bit 0 
                                                            to compare later
  173 000000E2 2901            CMP              R1, #01     ; perform operation
                                                             where one is subtr
                                                            acted from "check" 
                                                            value
  174 000000E4 D5D9            BPL              BRTH
  175 000000E6         
  176 000000E6         
  177 000000E6 4A0E            LDR              R2, =GPIO_PORTE_DATA_R ;checkin
                                                            g for 2nd button
  178 000000E8 7801            LDRB             R1, [R0]    ; load bits 7:0



ARM Macro Assembler    Page 5 


  179 000000EA F001 0101       AND              R1, R1, #0x01 ; isolate PE0
  180 000000EE 2901            CMP              R1, #1      ; subtract to see i
                                                            f result is zero, w
                                                            hich means it is pr
                                                            essed
  181 000000F0 D50C            BPL              SETFLAG     ; if result was zer
                                                            o, then switch was 
                                                            pressed, set flag
  182 000000F2         ;Check for flag, 
  183 000000F2         
  184 000000F2 F006 0601       AND              R6, R6, #0x01 
                                                            ;isolating the flag
                                                            
  185 000000F6 2E00            CMP              R6, #0      ; check flag status
                                                            
  186 000000F8 D100            BNE              COMP        ;When flag is 1, co
                                                            mpare with 900
  187 000000FA         
  188 000000FA         ;if not
  189 000000FA D0A8            BEQ              RUN
  190 000000FC         
  191 000000FC         
  192 000000FC         ;COMP() subtract 900 from R10 to see if result is postiv
                       e or negative
  193 000000FC F5BA 7461 
                       COMP    SUBS             R4, R10, #900
  194 00000100         ; branch to over if R10 is greater. if branch is not use
                       d, then proceed to set the flag in next line
  195 00000100 D5C6            BPL              OVER        ;should be bz
  196 00000102 F10A 0AC8       ADD              R10, R10, #200
  197 00000106 F1BB 0BC8       SUBS             R11, R11, #200
  198 0000010A E7A0            B                RUN
  199 0000010C         
  200 0000010C         ;;;;;;;;;;;;;;SETFLAG 
  201 0000010C F046 0601 
                       SETFLAG ORR              R6, #1
  202 00000110 E7E1            B                CHK
  203 00000112         
  204 00000112         
  205 00000112         
  206 00000112         
  207 00000112         
  208 00000112 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  209 00000114                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lab3.d -o.\lab3.o -I.\RTE\_Lab3 -IC:\Users\kools\AppData\Local\A
rm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\kools\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lab3.lst Lab3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 29 in file Lab3.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file Lab3.s
   Uses
      None
Comment: .text unused
ABV 000000A2

Symbol: ABV
   Definitions
      At line 141 in file Lab3.s
   Uses
      At line 138 in file Lab3.s
Comment: ABV used once
B2 000000B6

Symbol: B2
   Definitions
      At line 151 in file Lab3.s
   Uses
      At line 143 in file Lab3.s
      At line 147 in file Lab3.s

BLW 000000AC

Symbol: BLW
   Definitions
      At line 145 in file Lab3.s
   Uses
      At line 139 in file Lab3.s
Comment: BLW used once
BRTH 0000009A

Symbol: BRTH
   Definitions
      At line 135 in file Lab3.s
   Uses
      At line 174 in file Lab3.s
Comment: BRTH used once
CHK 000000D6

Symbol: CHK
   Definitions
      At line 169 in file Lab3.s
   Uses
      At line 100 in file Lab3.s
      At line 166 in file Lab3.s
      At line 202 in file Lab3.s

COMP 000000FC

Symbol: COMP
   Definitions
      At line 193 in file Lab3.s
   Uses
      At line 186 in file Lab3.s
Comment: COMP used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

DELAY 00000074

Symbol: DELAY
   Definitions
      At line 106 in file Lab3.s
   Uses
      At line 90 in file Lab3.s
      At line 97 in file Lab3.s
      At line 114 in file Lab3.s

DELAY1 00000082

Symbol: DELAY1
   Definitions
      At line 118 in file Lab3.s
   Uses
      At line 126 in file Lab3.s
      At line 157 in file Lab3.s
      At line 164 in file Lab3.s

EID1 00000000

Symbol: EID1
   Definitions
      At line 35 in file Lab3.s
   Uses
      At line 34 in file Lab3.s
Comment: EID1 used once
EID2 00000008

Symbol: EID2
   Definitions
      At line 37 in file Lab3.s
   Uses
      At line 36 in file Lab3.s
Comment: EID2 used once
OVER 00000090

Symbol: OVER
   Definitions
      At line 129 in file Lab3.s
   Uses
      At line 195 in file Lab3.s
Comment: OVER used once
RUN 0000004E

Symbol: RUN
   Definitions
      At line 84 in file Lab3.s
   Uses
      At line 133 in file Lab3.s
      At line 189 in file Lab3.s
      At line 198 in file Lab3.s

SETFLAG 0000010C

Symbol: SETFLAG
   Definitions
      At line 201 in file Lab3.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 181 in file Lab3.s
Comment: SETFLAG used once
Start 00000010

Symbol: Start
   Definitions
      At line 42 in file Lab3.s
   Uses
      At line 40 in file Lab3.s
Comment: Start used once
WAIT 00000078

Symbol: WAIT
   Definitions
      At line 109 in file Lab3.s
   Uses
      At line 111 in file Lab3.s
Comment: WAIT used once
WAIT1 00000086

Symbol: WAIT1
   Definitions
      At line 121 in file Lab3.s
   Uses
      At line 123 in file Lab3.s
Comment: WAIT1 used once
loop 0000004E

Symbol: loop
   Definitions
      At line 76 in file Lab3.s
   Uses
      At line 103 in file Lab3.s
Comment: loop used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 22 in file Lab3.s
   Uses
      At line 84 in file Lab3.s
      At line 94 in file Lab3.s
      At line 151 in file Lab3.s
      At line 161 in file Lab3.s
      At line 169 in file Lab3.s
      At line 177 in file Lab3.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 24 in file Lab3.s
   Uses
      At line 61 in file Lab3.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 23 in file Lab3.s
   Uses
      At line 55 in file Lab3.s
Comment: GPIO_PORTE_DIR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 25 in file Lab3.s
   Uses
      At line 48 in file Lab3.s
Comment: SYSCTL_RCGCGPIO_R used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 27 in file Lab3.s
   Uses
      At line 45 in file Lab3.s
Comment: TExaS_Init used once
1 symbol
360 symbols in table
