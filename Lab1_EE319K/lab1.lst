


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** Lab1.s ***************
    2 00000000         ; Program initially written by: Yerraballi and Valvano
    3 00000000         ; Author: Place your name here
    4 00000000         ; Date Created: 1/15/2018 
    5 00000000         ; Last Modified: 8/21/2022
    6 00000000         ; Brief description of the program: Solution to Lab1
    7 00000000         ; The objective of this system is to implement a parity 
                       system
    8 00000000         ; Hardware connections: 
    9 00000000         ;  One output is positive logic, 1 turns on the LED, 0 t
                       urns off the LED
   10 00000000         ;  Three inputs are positive logic, meaning switch not p
                       ressed is 0, pressed is 1
   11 00000000 400073FC 
                       GPIO_PORTD_DATA_R
                               EQU              0x400073FC
   12 00000000 40007400 
                       GPIO_PORTD_DIR_R
                               EQU              0x40007400
   13 00000000 4000751C 
                       GPIO_PORTD_DEN_R
                               EQU              0x4000751C
   14 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   15 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   16 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   17 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   18 00000000                 PRESERVE8
   19 00000000                 AREA             Data, ALIGN=2
   20 00000000         ;Put following in RAM, aligned to 32-bits
   21 00000000         ; No global variables needed for Lab 1
   22 00000000         
   23 00000000         
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         ;Put following in ROM, aligned to 32-bits 
   26 00000000                 THUMB
   27 00000000                 EXPORT           EID
   28 00000000 68 63 32 
              37 34 32 
              36 00    EID     DCB              "hc27426",0 ;replace abc123 wit
                                                            h your EID
   29 00000008                 EXPORT           RunGrader
   30 00000008                 ALIGN            4
   31 00000008 00000001 
                       RunGrader
                               DCD              1           ; change to nonzero
                                                             when ready for gra
                                                            ding
   32 0000000C         
   33 0000000C                 EXPORT           Lab1
   34 0000000C         Lab1



ARM Macro Assembler    Page 2 


   35 0000000C         ;Initializations
   36 0000000C         ;clock
   37 0000000C 4813            LDR              R0, = SYSCTL_RCGCGPIO_R
   38 0000000E 7801            LDRB             R1, [R0]
   39 00000010 F041 0108       ORR              R1, #0x08
   40 00000014 7001            STRB             R1, [R0]
   41 00000016 BF00            NOP
   42 00000018 BF00            NOP
   43 0000001A         ;Define direction(in and out) 
   44 0000001A 4811            LDR              R0, =GPIO_PORTD_DIR_R
   45 0000001C 6801            LDR              R1, [R0]
   46 0000001E         ; ;CLEAR R1 TO FILL 1'S EXCEPT NEEDED PLACES MOV VS AND 
                       FOR THIS, POSSIBLY TWO WAYS OF DOING IT?
   47 0000001E F021 0107       BIC              R1, #0x07
   48 00000022 F041 0120       ORR              R1, #0x20
   49 00000026 6001            STR              R1, [R0]    ;STORING MODIFIED R
                                                            1 VALUE INTO ORIGIN
                                                            AL DIR LOCATION WHI
                                                            CH IS IN @R0 
   50 00000028         ;DIGITAL ENABLE FOR TURNING ON 
   51 00000028 480E            LDR              R0, =GPIO_PORTD_DEN_R ;READ
   52 0000002A 7801            LDRB             R1, [R0]
   53 0000002C F041 0127       ORR              R1, #0X27   ;MODIFY TURN ON PD 
                                                            0 1 2 5
   54 00000030 7001            STRB             R1, [R0]    ;WRITE
   55 00000032         loop
   56 00000032         ;input, calculate, output    
   57 00000032 480D            LDR              R0, =GPIO_PORTD_DATA_R ;READ PO
                                                            RTD CONTENT'S ADDRE
                                                            SS
   58 00000034 6801            LDR              R1, [R0]
   59 00000036 F001 0301       AND              R3, R1, #0X01 
                                                            ;ISOLATE PD0 -> R3
   60 0000003A F001 0402       AND              R4, R1, #0X02 
                                                            ;ISOLATE PD1 -> R4
   61 0000003E F001 0504       AND              R5, R1, #0X04 
                                                            ;ISOLATE PD2 -> R5
   62 00000042 EA4F 0454       LSR              R4, R4, #1  ;SHIFT RIGHT 1BIT U
                                                            SING SHIFT OPERATIO
                                                            N (LSL LSR)
   63 00000046 EA4F 0595       LSR              R5, R5, #2  ;SHIFT RIGHT 2BIT
   64 0000004A         ;FOR INPUT PINS, PERFORM EOR TO DETERMINE OUTPUT VALUE
   65 0000004A EA83 0304       EOR              R3, R3, R4  ;EOR RD2, PD1 
   66 0000004E EA83 0305       EOR              R3, R3, R5  ;EOR PD(21) AND PD(
                                                            3)
   67 00000052 EA4F 1343       LSL              R3, R3, #5  ;SHIFT LEFT 5 BIT 
   68 00000056         ;ORR R1, R1, R3 ;WRITE PUT R3 VALUE INTO BIT5 OF PORTD
   69 00000056 6003            STR              R3, [R0]    ; STORE IT BACK
   70 00000058         
   71 00000058 E7EB            B                loop
   72 0000005A         
   73 0000005A         
   74 0000005A         
   75 0000005A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   76 0000005C                 END                          ; end of file
              400FE608 
              40007400 



ARM Macro Assembler    Page 3 


              4000751C 
              400073FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lab1.d -o.\lab1.o -I.\RTE\_Lab1 -IC:\Users\kools\AppData\Local\A
rm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\kools\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lab1.lst Lab1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Data 00000000

Symbol: Data
   Definitions
      At line 19 in file Lab1.s
   Uses
      None
Comment: Data unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file Lab1.s
   Uses
      None
Comment: .text unused
EID 00000000

Symbol: EID
   Definitions
      At line 28 in file Lab1.s
   Uses
      At line 27 in file Lab1.s
Comment: EID used once
Lab1 0000000C

Symbol: Lab1
   Definitions
      At line 34 in file Lab1.s
   Uses
      At line 33 in file Lab1.s
Comment: Lab1 used once
RunGrader 00000008

Symbol: RunGrader
   Definitions
      At line 31 in file Lab1.s
   Uses
      At line 29 in file Lab1.s
Comment: RunGrader used once
loop 00000032

Symbol: loop
   Definitions
      At line 55 in file Lab1.s
   Uses
      At line 71 in file Lab1.s
Comment: loop used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTD_DATA_R 400073FC

Symbol: GPIO_PORTD_DATA_R
   Definitions
      At line 11 in file Lab1.s
   Uses
      At line 57 in file Lab1.s
Comment: GPIO_PORTD_DATA_R used once
GPIO_PORTD_DEN_R 4000751C

Symbol: GPIO_PORTD_DEN_R
   Definitions
      At line 13 in file Lab1.s
   Uses
      At line 51 in file Lab1.s
Comment: GPIO_PORTD_DEN_R used once
GPIO_PORTD_DIR_R 40007400

Symbol: GPIO_PORTD_DIR_R
   Definitions
      At line 12 in file Lab1.s
   Uses
      At line 44 in file Lab1.s
Comment: GPIO_PORTD_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 14 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTE_DATA_R unused
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 16 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTE_DEN_R unused
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 15 in file Lab1.s
   Uses
      None
Comment: GPIO_PORTE_DIR_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 17 in file Lab1.s
   Uses
      At line 37 in file Lab1.s
Comment: SYSCTL_RCGCGPIO_R used once
7 symbols
349 symbols in table
